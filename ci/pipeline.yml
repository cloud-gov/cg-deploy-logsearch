---
groups:
  - name: all
    jobs:
    - build-logsearch-release
    - test-logsearch-for-cloudfoundry-release
    - build-logsearch-for-cloudfoundry-release
    - deploy-logsearch-development
    - upload-kibana-objects-development
    - check-backup-development-tenant
    - check-backup-development-platform
    - smoke-tests-development
    - smoke-tests-login-development
    - deploy-logsearch-staging
    - upload-kibana-objects-staging
    - check-backup-staging-platform
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
    - deploy-logsearch-production
    - upload-kibana-objects-production
    - check-backup-production-tenant
    - check-backup-production-platform
    - smoke-tests-production
    - smoke-tests-login-production
    - deploy-logsearch-platform-development
    - smoke-tests-platform-development
    - deploy-logsearch-platform-staging
    - smoke-tests-platform-staging
    - deploy-logsearch-platform-production
    - smoke-tests-platform-production
  - name: build-releases
    jobs:
    - build-logsearch-release
    - test-logsearch-for-cloudfoundry-release
    - build-logsearch-for-cloudfoundry-release
  - name: tenant-development
    jobs:
    - deploy-logsearch-development
    - upload-kibana-objects-development
    - check-backup-development-tenant
    - smoke-tests-development
    - smoke-tests-login-development
  - name: platform-development
    jobs:
    - deploy-logsearch-platform-development
    - smoke-tests-platform-development
    - check-backup-development-platform
  - name: tenant-staging
    jobs:
    - deploy-logsearch-staging
    - upload-kibana-objects-staging
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
  - name: platform-staging
    jobs:
    - deploy-logsearch-platform-staging
    - smoke-tests-platform-staging
    - check-backup-staging-platform
  - name: tenant-production
    jobs:
    - deploy-logsearch-production
    - upload-kibana-objects-production
    - check-backup-production-tenant
    - smoke-tests-production
    - smoke-tests-login-production
  - name: platform-production
    jobs:
    - deploy-logsearch-platform-production
    - smoke-tests-platform-production
    - check-backup-production-platform
  - name: tenant
    jobs:
    - deploy-logsearch-development
    - upload-kibana-objects-development
    - check-backup-development-tenant
    - smoke-tests-development
    - smoke-tests-login-development
    - deploy-logsearch-staging
    - upload-kibana-objects-staging
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
    - deploy-logsearch-production
    - upload-kibana-objects-production
    - check-backup-production-tenant
    - smoke-tests-production
    - smoke-tests-login-production
  - name: platform
    jobs:
    - deploy-logsearch-platform-development
    - smoke-tests-platform-development
    - check-backup-development-platform
    - deploy-logsearch-platform-staging
    - smoke-tests-platform-staging
    - check-backup-staging-platform
    - deploy-logsearch-platform-production
    - smoke-tests-platform-production
    - check-backup-production-platform

jobs:
- name: build-logsearch-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: logsearch-release-git-repo
      trigger: true
    - get: pipeline-tasks
    - get: final-builds-dir-tarball
      resource: logsearch-final-builds-dir-tarball
    - get: releases-dir-tarball
      resource: logsearch-releases-dir-tarball
  - task: finalize-release
    file: pipeline-tasks/finalize-bosh-release.yml
    tags: [iaas]
    params:
      PRIVATE_YML_CONTENT: |-
        ---
        blobstore:
          options:
            region: ((aws-region))
            bucket_name: ((cg-s3-blobstore-bucket))
            credentials_source: env_or_profile
            server_side_encryption: AES256
  - in_parallel:
    - put: logsearch-release
      tags: [iaas]
      params:
        file: finalized-release/logsearch-*.tgz
    - put: logsearch-final-builds-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/final-builds-dir-logsearch.tgz
    - put: logsearch-releases-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/releases-dir-logsearch.tgz

- name: test-logsearch-for-cloudfoundry-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: logsearch-for-cloudfoundry-release-git-repo
      trigger: true
  - task: run-tests
    config:
      inputs:
      - name: release-git-repo
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: node
          tag: lts
      run:
        path: sh
        args:
          - -exc
          - cd release-git-repo/src/kibana-cf_authentication && npm install && npm test
  on_failure:
    put: slack
    params: &slack-params
      text: |
        :x: FAILED to pass tests for the latest update to logsearch-for-cloudfoundry
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully passed tests for the latest update to logsearch-for-cloudfoundry
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: build-logsearch-for-cloudfoundry-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: logsearch-for-cloudfoundry-release-git-repo
      passed: [test-logsearch-for-cloudfoundry-release]
      trigger: true
    - get: pipeline-tasks
    - get: final-builds-dir-tarball
      resource: logsearch-for-cloudfoundry-final-builds-dir-tarball
    - get: releases-dir-tarball
      resource: logsearch-for-cloudfoundry-releases-dir-tarball
  - task: finalize-release
    file: pipeline-tasks/finalize-bosh-release.yml
    tags: [iaas]
    params:
      PRIVATE_YML_CONTENT: |-
        ---
        blobstore:
          options:
            region: ((aws-region))
            bucket_name: ((cg-s3-blobstore-bucket))
            credentials_source: env_or_profile
            server_side_encryption: AES256
  - in_parallel:
    - put: logsearch-for-cloudfoundry-release
      tags: [iaas]
      params:
        file: finalized-release/logsearch-for-cloudfoundry-*.tgz
    - put: logsearch-for-cloudfoundry-final-builds-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/final-builds-dir-logsearch-for-cloudfoundry.tgz
    - put: logsearch-for-cloudfoundry-releases-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/releases-dir-logsearch-for-cloudfoundry.tgz
- name: deploy-logsearch-platform-development
  serial_groups: [bosh-platform-development]
  plan:
  - in_parallel:
    - get: common-development
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
    - get: common-secrets
      resource: common-platform-development
      trigger: true
    - get: logsearch-for-cloudfoundry-release
      trigger: true
    - get: logsearch-release
      trigger: true
    - get: prometheus-release
      trigger: true
    - get: oauth2-proxy-release
      trigger: true
    - get: secureproxy-release
      trigger: true
    - get: logsearch-stemcell-bionic
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
      trigger: true
  - task: logsearch-manifest
    config: &manifest-config
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: logsearch-config
      - name: common-secrets
      - name: terraform-yaml
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-platform-deployment.yml \
            logsearch-config/logsearch-platform-jobs.yml \
            common-secrets/logsearch-platform-development.yml \
            logsearch-config/logsearch-platform-development.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-development))
        CF_PASSWORD: ((cf-password-development))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  - &lint-manifest
    task: lint-manifest
    file: pipeline-tasks/lint-manifest.yml
    input_mapping:
      pipeline-config: logsearch-config
      lint-manifest: logsearch-manifest
    params:
      LINTER_CONFIG: bosh-lint.yml
    # todo (mxplusb): figure out why it's pushing prometheus, oauth2-proxy, and secureproxy releases...
  - put: logsearch-platform-development-deployment
    params: &deploy-params-platform
      manifest: logsearch-manifest/manifest.yml
      releases:
      - logsearch-release/*.tgz
      - logsearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      - oauth2-proxy-release/*.tgz
      - secureproxy-release/*.tgz
      stemcells:
      - logsearch-stemcell-bionic/*.tgz
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform logsearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform logsearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-development
  serial_groups: [bosh-platform-development]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: tests-timer
      trigger: true
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-platform-development]
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-platform-development]
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((logsearch-platform.development.name))
      BOSH_ERRAND: ((logsearch-platform.development.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform logsearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for platform logsearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-logsearch-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-development
      trigger: true
    - get: logsearch-config
      trigger: true
    - get: logsearch-for-cloudfoundry-release
      trigger: true
    - get: logsearch-release
      trigger: true
    - get: logsearch-stemcell-bionic
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
    - get: prometheus-release
      trigger: true
    - get: oauth2-proxy-release
      trigger: true
    - get: secureproxy-release
      trigger: true
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-deployment.yml \
            logsearch-config/logsearch-jobs.yml \
            common-secrets/logsearch-development.yml \
            logsearch-config/logsearch-development.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-development))
        CF_PASSWORD: ((cf-password-development))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  - *lint-manifest
  - put: logsearch-development-deployment
    params: &deploy-params
      manifest: logsearch-manifest/manifest.yml
      releases:
      - logsearch-release/*.tgz
      - logsearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - logsearch-stemcell-bionic/*.tgz
      ops_files:
      - logsearch-config/nats-tls-dev.yml
  on_failure:
    put: slack
    params: &slack-params
      text: |
        :x: FAILED to deploy logsearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed logsearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: tests-timer
      trigger: true
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-config
      passed: [deploy-logsearch-development]
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.development.name))
      BOSH_ERRAND: ((logsearch.development.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for logsearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for logsearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-development]
    - get: logsearch-config
      passed: [deploy-logsearch-development]
      trigger: true
    - get: logsearch-development-deployment
      trigger: true
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-development]
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: logsearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for logsearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Login smoke tests for logsearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: upload-kibana-objects-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
      passed: [deploy-logsearch-development]
    - get: logsearch-development-deployment
      trigger: true
  - task: upload-kibana-objects
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.development.name))
      BOSH_CA_CERT: common/master-bosh.crt
      BOSH_ERRAND: upload-kibana-objects

- name: deploy-logsearch-platform-staging
  serial_groups: [bosh-platform-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-platform-staging
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: terraform-yaml
      resource: terraform-yaml-staging
      trigger: true
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-platform-deployment.yml \
            logsearch-config/logsearch-platform-jobs.yml \
            common-secrets/logsearch-platform-staging.yml \
            logsearch-config/logsearch-platform-staging.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-staging))
        CF_PASSWORD: ((cf-password-staging))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  - *lint-manifest
  - put: logsearch-platform-staging-deployment
    params: *deploy-params-platform
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform logsearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform logsearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-staging
  serial_groups: [bosh-platform-staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-platform-staging]
    - get: logsearch-platform-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((logsearch-platform.staging.name))
      BOSH_ERRAND: ((logsearch-platform.staging.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform logsearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for platform logsearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-logsearch-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-staging
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-development]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-development, smoke-tests-login-development]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-development]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-development]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-development]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-development]
    - get: terraform-yaml
      resource: terraform-yaml-staging
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-deployment.yml \
            logsearch-config/logsearch-jobs.yml \
            common-secrets/logsearch-staging.yml \
            logsearch-config/logsearch-staging.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-staging))
        CF_PASSWORD: ((cf-password-staging))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  - *lint-manifest
  - put: logsearch-staging-deployment
    params:
      manifest: logsearch-manifest/manifest.yml
      releases:
      - logsearch-release/*.tgz
      - logsearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - logsearch-stemcell-bionic/*.tgz
      ops_files:
      - logsearch-config/nats-tls-stage.yml
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy logsearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed logsearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.staging.name))
      BOSH_ERRAND: ((logsearch.staging.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for logsearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for logsearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-staging]
    - get: logsearch-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: logsearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-staging))
      CF_PASSWORD: ((cf-password-staging))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for logsearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Login smoke tests for logsearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: upload-kibana-objects-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
      passed: [deploy-logsearch-staging]
    - get: logsearch-staging-deployment
      trigger: true
  - task: upload-kibana-objects
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.staging.name))
      BOSH_CA_CERT: common/master-bosh.crt
      BOSH_ERRAND: upload-kibana-objects

- name: deploy-logsearch-platform-production
  serial_groups: [bosh-platform-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-platform-production
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-platform-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-platform-deployment.yml \
            logsearch-config/logsearch-platform-jobs.yml \
            common-secrets/logsearch-platform-production.yml \
            logsearch-config/logsearch-platform-production.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-production))
        CF_PASSWORD: ((cf-password-production))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  - *lint-manifest
  - put: logsearch-platform-production-deployment
    params: *deploy-params-platform
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform logsearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform logsearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-production
  serial_groups: [bosh-platform-production]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-platform-production]
    - get: logsearch-platform-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((logsearch-platform.production.name))
      BOSH_ERRAND: ((logsearch-platform.production.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform logsearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for platform logsearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-logsearch-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-prod
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-staging, smoke-tests-login-staging]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-deployment.yml \
            logsearch-config/logsearch-jobs.yml \
            common-secrets/logsearch-production.yml \
            logsearch-config/logsearch-production.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      params:
        CF_USERNAME: ((cf-username-production))
        CF_PASSWORD: ((cf-password-production))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  - *lint-manifest
  - put: logsearch-production-deployment
    params:
      manifest: logsearch-manifest/manifest.yml
      releases:
      - logsearch-release/*.tgz
      - logsearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - logsearch-stemcell-bionic/*.tgz
      ops_files:
      - logsearch-config/nats-tls-prod.yml
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy logsearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed logsearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common
      resource: master-bosh-root-cert
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.production.name))
      BOSH_ERRAND: ((logsearch.production.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for logsearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for logsearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-production]
    - get: logsearch-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: logsearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-production))
      CF_PASSWORD: ((cf-password-production))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for logsearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Login smoke tests for logsearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: upload-kibana-objects-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
      passed: [deploy-logsearch-production]
    - get: common
      resource: master-bosh-root-cert
    - get: logsearch-production-deployment
      trigger: true
  - task: upload-kibana-objects
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.production.name))
      BOSH_CA_CERT: common/master-bosh.crt
      BOSH_ERRAND: upload-kibana-objects

- name: deploy-logsearch-platform-westb
  serial_groups: [bosh-platform-westb]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-platform-westb
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-platform-staging]
    - get: logsearch-platform-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-westb
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-platform-deployment.yml \
            logsearch-config/logsearch-platform-jobs.yml \
            common-secrets/logsearch-platform-westb.yml \
            logsearch-config/logsearch-platform-westb.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      outputs:
      - name: logsearch-manifest
      params:
        CF_USERNAME: ((cf-username-westb))
        CF_PASSWORD: ((cf-password-westb))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-westb))
  - *lint-manifest
  - put: logsearch-platform-westb-deployment
    params: *deploy-params-platform
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform logsearch on westb
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform logsearch on westb
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-westb
  serial_groups: [bosh-platform-westb]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-platform-westb]
    - get: logsearch-platform-westb-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.westb.environment))
      BOSH_CLIENT: ((bosh.westb.client))
      BOSH_CLIENT_SECRET: ((bosh.westb.client-secret))
      BOSH_DEPLOYMENT: ((logsearch-platform.westb.name))
      BOSH_ERRAND: ((logsearch-platform.westb.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform logsearch on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for platform logsearch on westb PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-logsearch-westb
  serial_groups: [bosh-westb]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-westb
      trigger: true
    - get: logsearch-config
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-staging, smoke-tests-login-staging]
    - get: logsearch-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [smoke-tests-staging]
    - get: logsearch-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-westb
  - task: logsearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=logsearch-config spruce merge \
            --prune terraform_outputs \
            logsearch-config/logsearch-deployment.yml \
            logsearch-config/logsearch-jobs.yml \
            common-secrets/logsearch-westb.yml \
            logsearch-config/logsearch-westb.yml \
            terraform-yaml/state.yml \
            > logsearch-manifest/manifest.yml
      params:
        CF_USERNAME: ((cf-username-westb))
        CF_PASSWORD: ((cf-password-westb))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-westb))
  - *lint-manifest
  - put: logsearch-westb-deployment
    params:
      manifest: logsearch-manifest/manifest.yml
      releases:
      - logsearch-release/*.tgz
      - logsearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - logsearch-stemcell-bionic/*.tgz
      ops_files:
      - logsearch-config/nats-tls-prod.yml
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy logsearch on westb
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed logsearch on westb
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-westb
  serial_groups: [bosh-westb]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common
      resource: master-bosh-root-cert
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-westb-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.westb.environment))
      BOSH_CLIENT: ((bosh.westb.client))
      BOSH_CLIENT_SECRET: ((bosh.westb.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.westb.name))
      BOSH_ERRAND: ((logsearch.westb.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for logsearch on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Smoke tests for logsearch on westb PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-westb
  serial_groups: [bosh-westb]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: logsearch-config
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: prometheus-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-stemcell-bionic
      trigger: true
      passed: [deploy-logsearch-westb]
    - get: logsearch-westb-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: logsearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-westb))
      CF_PASSWORD: ((cf-password-westb))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-westb))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for logsearch on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: ((slack-news-channel))
      text: |
        :white_check_mark: Login smoke tests for logsearch on westb PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: upload-kibana-objects-westb
  serial_groups: [bosh-westb]
  plan:
  - in_parallel:
    - get: pipeline-tasks
      passed: [deploy-logsearch-westb]
    - get: common
      resource: master-bosh-root-cert
    - get: logsearch-westb-deployment
      trigger: true
  - task: upload-kibana-objects
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.westb.environment))
      BOSH_CLIENT: ((bosh.westb.client))
      BOSH_CLIENT_SECRET: ((bosh.westb.client-secret))
      BOSH_DEPLOYMENT: ((logsearch.westb.name))
      BOSH_CA_CERT: common/master-bosh.crt
      BOSH_ERRAND: upload-kibana-objects

- name: check-backup-development-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((logsearch-development-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      BUCKET_NAME: logsearch-cf-development
      ENVIRONMENT: development-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-development-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((logsearch-development-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      ENVIRONMENT: development-platform
      INDEX_PATTERN: logs-platform-*

- name: check-backup-staging-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((logsearch-staging-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      BUCKET_NAME: logsearch-cf-staging
      ENVIRONMENT: staging-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-staging-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((logsearch-staging-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      ENVIRONMENT: development-platform
      INDEX_PATTERN: logs-platform-*

- name: check-backup-production-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((logsearch-production-check-backup-es-host))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      BUCKET_NAME: logsearch-cf-production
      ENVIRONMENT: production-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-production-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: logsearch-config
  - task: check-backup
    file: logsearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((logsearch-production-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      ENVIRONMENT: production-platform
      INDEX_PATTERN: logs-platform-*

resources:
- name: logsearch-release-git-repo
  type: git
  source:
    uri: https://github.com/cloud-gov/logsearch-boshrelease
    branch: develop

- name: logsearch-final-builds-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: final-builds-dir-logsearch.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: logsearch-releases-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: releases-dir-logsearch.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: logsearch-for-cloudfoundry-release-git-repo
  type: git
  source:
    uri: https://github.com/cloud-gov/logsearch-for-cloudfoundry
    branch: develop

- name: logsearch-for-cloudfoundry-final-builds-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: final-builds-dir-logsearch-for-cloudfoundry.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: logsearch-for-cloudfoundry-releases-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: releases-dir-logsearch-for-cloudfoundry.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    region_name: ((aws-region))
    versioned_file: master-bosh.crt

- name: common-development
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-development.yml
    region_name: ((aws-region))

- name: common-staging
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-staging.yml
    region_name: ((aws-region))

- name: common-prod
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-production.yml
    region_name: ((aws-region))

- name: common-platform-development
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-platform-development.yml
    region_name: ((aws-region))

- name: common-platform-staging
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-platform-staging.yml
    region_name: ((aws-region))

- name: common-platform-production
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-platform-production.yml
    region_name: ((aws-region))

- name: common-platform-westb
  type: s3-iam
  source:
    bucket: ((logsearch-private-bucket))
    versioned_file: logsearch-platform-westb.yml
    region_name: ((aws-region))

- name: logsearch-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: logsearch-([\d\.]*).tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: logsearch-for-cloudfoundry-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: logsearch-for-cloudfoundry-(.*).tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: oauth2-proxy-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: oauth2-proxy-(.*).tgz
    region_name: ((aws-region))

- name: secureproxy-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: secureproxy-(.*).tgz
    region_name: ((aws-region))

- name: prometheus-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/prometheus-boshrelease

- name: logsearch-config
  type: git
  source:
    uri: ((cg-deploy-logsearch-git-url))

- name: logsearch-stemcell-bionic
  source:
    name: bosh-aws-xen-hvm-ubuntu-bionic-go_agent
  type: bosh-io-stemcell

- name: logsearch-development-deployment
  type: bosh-deployment
  source: &bosh-params-development
    target: ((logsearch-development-deployment-bosh-target))
    client: ((logsearch-development-deployment-bosh-client))
    client_secret: ((logsearch-development-deployment-bosh-client-secret))
    ca_cert: ((logsearch-development-ca-cert))
    deployment: logsearch

- name: logsearch-staging-deployment
  type: bosh-deployment
  source: &bosh-params-staging
    target: ((logsearch-staging-deployment-bosh-target))
    client: ((logsearch-staging-deployment-bosh-client))
    client_secret: ((logsearch-staging-deployment-bosh-client-secret))
    ca_cert: ((logsearch-staging-ca-cert))
    deployment: logsearch

- name: logsearch-production-deployment
  type: bosh-deployment
  source: &bosh-params-production
    target: ((logsearch-production-deployment-bosh-target))
    client: ((logsearch-production-deployment-bosh-client))
    client_secret: ((logsearch-production-deployment-bosh-client-secret))
    ca_cert: ((logsearch-production-ca-cert))
    deployment: logsearch

- name: logsearch-westb-deployment
  type: bosh-deployment
  source: &bosh-params-westb
    target: ((logsearch-westb-deployment-bosh-target))
    client: ((logsearch-westb-deployment-bosh-client))
    client_secret: ((logsearch-westb-deployment-bosh-client-secret))
    ca_cert: ((logsearch-westb-ca-cert))
    deployment: logsearch

- name: logsearch-platform-development-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-development
    deployment: logsearch-platform

- name: logsearch-platform-staging-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-staging
    deployment: logsearch-platform

- name: logsearch-platform-production-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-production
    deployment: logsearch-platform

- name: logsearch-platform-westb-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-westb
    deployment: logsearch-platform

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: tests-timer
  type: time
  source:
    interval: 30m

- name: check-backup-timer
  type: time
  source:
    interval: 30m

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-development))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-staging))
    versioned_file: ((tf-state-file-staging))
    region_name: ((aws-region))

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-production))
    versioned_file: ((tf-state-file-production))
    region_name: ((aws-region))

- name: terraform-yaml-westb
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-westb))
    versioned_file: ((tf-state-file-westb))
    region_name: ((aws-region))

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
